package cs1302.arcade;

import java.util.Random;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.Scene;
import javafx.stage.Stage;
import java.text.Normalizer;
import java.time.LocalTime;
import java.io.*;
import javafx.util.Duration;
import javafx.animation.Timeline;
import javafx.animation.KeyFrame;
import com.google.gson.JsonParser;
import java.net.URL;
import com.google.gson.JsonElement;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import java.util.List;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.ArrayList;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import javafx.scene.*;

/**
 * Application subclass for {@code ArcadeApp}.
 * @version 2019.fa
 */
public class ArcadeApp extends Application {

    //    Group group = new Group();           // main container
    //Random rng = new Random();           // random number generator
    //Rectangle r = new Rectangle(20, 20); // some rectangle
    VBox vbox;
    public static final int MOVE = 25;
    public static final int TOTAL_SIZE = 25;
    private static Pane pane; //new Pane();
    private static Tetris tetris;
    private static Scene scene;
    private static Scene scene2;
    public static int score = 0;
    private static boolean game = true;
    //private static Tetris function = Controller.createShape();
    private static int lines = 0;
    public static int xtotal = TOTAL_SIZE * 12;
    public static int ytotal = TOTAL_SIZE * 24;
    public static int[][] grid = new int[xtotal/TOTAL_SIZE][ytotal/TOTAL_SIZE];

    
    ///**
     //* Return a mouse event handler that moves to the rectangle to a random
     //* position any time a mouse event is generated by the associated node.
     //* @return the mouse event handler
    //     */
     //private EventHandler<? super MouseEvent> createMouseHandler() {
     // return event -> {
     //     System.out.println(event);
     //     r.setX(rng.nextDouble() * (640 - r.getWidth()));
     //     r.setY(rng.nextDouble() * (480 - r.getHeight()));
     // };
     //} // createMouseHandler

    ///**
     //* Return a key event handler that moves to the rectangle to the left
     //* or the right depending on what key event is generated by the associated
     //* node.
     //* @return the key event handler
     //*/
     //private EventHandler<? super KeyEvent> createKeyHandler() {
     // return event -> {
     //     System.out.println(event);
     //     switch (event.getCode()) {
     //     case LEFT:  // KeyCode.LEFT
     //         r.setX(r.getX() - 10.0);
     //         break;
     //     case RIGHT: // KeyCode.RIGHT
     //         r.setX(r.getX() + 10.0);
     //         break;
     //     default:
     //         // do nothing
     //     } // switch
            // TODO bounds checking
     // };
    } // createKeyHandler

    /**
     * {@inheritdoc}
     */
    @Override
    public void start(Stage stage) {

	scene = new Scene(pane, xtotal + 150, ytotal);
        stage.setMinWidth(500);
        stage.setMinHeight(480);
        stage.setTitle("GalleryApp!");
        stage.setScene(scene);
        stage.sizeToScene();
        stage.show();

    } //start
} // ArcadeApp
